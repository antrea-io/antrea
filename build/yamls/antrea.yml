# yaml template for Antrea
# Right config parameters and Antrea Docker image must be specified.
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: antreaagentinfos.clusterinformation.crd.antrea.io
spec:
  group: clusterinformation.crd.antrea.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Cluster
  names:
    plural: antreaagentinfos
    singular: antreaagentinfo
    kind: AntreaAgentInfo
    shortNames:
      - aai
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: antreacontrollerinfos.clusterinformation.crd.antrea.io
spec:
  group: clusterinformation.crd.antrea.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Cluster
  names:
    plural: antreacontrollerinfos
    singular: antreacontrollerinfo
    kind: AntreaControllerInfo
    shortNames:
      - aci
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: antrea-config
  namespace: kube-system
data:
  antrea-controller.conf: |
    # Placeholder
  antrea-agent.conf: |
    # Name of the OpenVSwitch bridge antrea-agent will create and use.
    # Make sure it doesn't conflict with your existing OpenVSwitch bridges.
    #ovsBridge: br-int

    # Name of the interface antrea-agent will create and use for host <--> pod communication.
    # Make sure it doesn't conflict with your existing interfaces.
    #hostGateway: gw0

    # Encapsulation mode for communication between Pods across Nodes, supported values:
    # - vxlan (default)
    # - geneve
    #tunnelType: vxlan

    # Default MTU to use for the host gateway interface and the network interface of each Pod. If
    # omitted, antrea-agent will default this value to 1450 to accomodate for tunnel encapsulate
    # overhead.
    #defaultMTU: 1450

    # CIDR Range for services in cluster. It's required to support egress network policy, should
    # be set to the same value as the one specified by --service-cluster-ip-range for kube-apiserver.
    #serviceCIDR: 10.96.0.0/12
  antrea-cni.conf: |
    {
      "cniVersion":"0.3.0",
      "name": "antrea",
      "type": "antrea",
      "ipam": {
        "type": "host-local"
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: antrea-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: antrea-agent
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-controller
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - "clusterinformation.crd.antrea.io"
    resources:
      - antreacontrollerinfos
    verbs:
      - get
      - create
      - update
      - delete
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-agent
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - "clusterinformation.crd.antrea.io"
    resources:
      - antreaagentinfos
    verbs:
      - get
      - create
      - update
      - delete
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: antrea-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: antrea-controller
subjects:
  - kind: ServiceAccount
    name: antrea-controller
    namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: antrea-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: antrea-agent
subjects:
  - kind: ServiceAccount
    name: antrea-agent
    namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: antrea
  namespace: kube-system
  labels:
    app: antrea
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: antrea
    component: antrea-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: antrea-controller
  namespace: kube-system
  labels:
    app: antrea
    component: antrea-controller
spec:
  # Only a single active instance is supported for now.
  replicas: 1
  strategy:
    # Ensure the existing Pod is killed before the new one is created.
    type: Recreate
  selector:
    matchLabels:
      app: antrea
      component: antrea-controller
  template:
    metadata:
      labels:
        app: antrea
        component: antrea-controller
    spec:
      nodeSelector:
        # Note: beta.kubernetes.io/os is targeted for removal in K8s v1.18, if running Antrea with 1.18
        # or higher uncomment the following line and remove beta.kubernetes.io/os.
        #kubernetes.io/os: linux
        beta.kubernetes.io/os: linux
      hostNetwork: true
      priorityClassName: system-cluster-critical
      tolerations:
        # Mark it as a critical add-on.
        - key: CriticalAddonsOnly
          operator: Exists
        # Allow it to schedule onto master nodes.
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: antrea-controller
      containers:
        - name: antrea-controller
          image: antrea-ubuntu
          imagePullPolicy: IfNotPresent
          command: ["antrea-controller"]
          args: ["--config", "/etc/antrea/antrea-controller.conf"]
          env:
            # Provide pod and node information for clusterinformation CRD.
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: antrea-config
              mountPath: /etc/antrea/antrea-controller.conf
              subPath: antrea-controller.conf
              readOnly: true
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: antrea-agent
  namespace: kube-system
  labels:
    app: antrea
    component: antrea-agent
spec:
  selector:
    matchLabels:
      app: antrea
      component: antrea-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: antrea
        component: antrea-agent
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      tolerations:
        # Mark it as a critical add-on.
        - key: CriticalAddonsOnly
          operator: Exists
        # Make sure it gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
      nodeSelector:
        # Note: beta.kubernetes.io/os is targeted for removal in K8s v1.18, if running Antrea with 1.18
        # or higher uncomment the following line and remove beta.kubernetes.io/os.
        #kubernetes.io/os: linux
        beta.kubernetes.io/os: linux
      serviceAccountName: antrea-agent
      initContainers:
        - name: install-cni
          image: antrea-ubuntu
          imagePullPolicy: IfNotPresent
          command: ["install_cni"]
          securityContext:
            capabilities:
              add:
                # SYS_MODULE is required to load the OVS kernel module.
                - SYS_MODULE
          volumeMounts:
          - name: antrea-config
            mountPath: /etc/antrea/antrea-cni.conf
            subPath: antrea-cni.conf
            readOnly: true
          - name: host-cni-conf
            mountPath: /host/etc/cni/net.d
          - name: host-cni-bin
            mountPath: /host/opt/cni/bin
          # For loading the OVS kernel module.
          - name: host-lib-modules
            mountPath: /lib/modules
      containers:
        - name: antrea-agent
          image: antrea-ubuntu
          imagePullPolicy: IfNotPresent
          command: ["antrea-agent"]
          args: ["--config", "/etc/antrea/antrea-agent.conf"]
          env:
            # Provide pod and node information for clusterinformation CRD.
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - container_liveness_probe agent
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          securityContext:
            # antrea-agent needs to manipulate /proc/sys/net/ipv4/conf/XXX/send_redirects"
            privileged: true
          volumeMounts:
          - name: antrea-config
            mountPath: /etc/antrea/antrea-agent.conf
            subPath: antrea-agent.conf
            readOnly: true
          - name: host-var-run-antrea
            mountPath: /var/run/antrea
          - name: host-var-run-antrea
            mountPath: /var/run/openvswitch
            subPath: openvswitch
          # host-local IPAM stores allocated IP addresses as files in /var/lib/cni/networks/$NETWORK_NAME.
          # Mount a sub-directory of host-var-run-antrea to it for persistence of IP allocation.
          - name: host-var-run-antrea
            mountPath: /var/lib/cni
            subPath: cni
          # We need to mount both the /proc directory and the /var/run/netns directory so that
          # antrea-agent can open the network namespace path when setting up Pod
          # networking. Different container runtimes may use /proc or /var/run/netns when invoking
          # the CNI commands. Docker uses /proc and containerd uses /var/run/netns.
          - name: host-proc
            mountPath: /host/proc
            readOnly: true
          - name: host-var-run-netns
            mountPath: /host/var/run/netns
            readOnly: true
            # When a container is created, a mount point for the network namespace is added under
            # /var/run/netns on the host, which needs to be propagated to the antrea-agent container.
            mountPropagation: HostToContainer
        - name: antrea-ovs
          image: antrea-ubuntu
          imagePullPolicy: IfNotPresent
          command: ["start_ovs"]
          securityContext:
            # capabilities required by OVS daemons
            capabilities:
              add:
                - SYS_NICE
                - NET_ADMIN
                - SYS_ADMIN
                - IPC_LOCK
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - timeout 5 container_liveness_probe ovs
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
          - name: host-var-run-antrea
            mountPath: /var/run/openvswitch
            subPath: openvswitch
          - name: host-var-log-antrea
            mountPath: /var/log/openvswitch
            subPath: openvswitch
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
        - name: host-cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: host-cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: host-proc
          hostPath:
            path: /proc
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-var-run-antrea
          hostPath:
            path: /var/run/antrea
            # we use subPath to create run subdirectories for different component (e.g. OVS) and
            # subPath requires the base volume to exist
            type: DirectoryOrCreate
        - name: host-var-log-antrea
          hostPath:
            path: /var/log/antrea
            # we use subPath to create logging subdirectories for different component (e.g. OVS)
            type: DirectoryOrCreate
        - name: host-lib-modules
          hostPath:
            path: /lib/modules
