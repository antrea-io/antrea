apiVersion: apps/v1
kind: Deployment
metadata:
  name: antrea-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: antrea
    component: antrea-controller
spec:
  strategy:
    # Ensure the existing Pod is stopped before the new one is created.
    type: Recreate
  selector:
    matchLabels:
      app: antrea
      component: antrea-controller
  replicas: 1
  template:
    metadata:
      annotations:
        # Automatically restart Pod if the ConfigMap changes
        # See https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: antrea
        component: antrea-controller
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      priorityClassName: {{ .Values.controller.priorityClassName }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.testing.simulator.enable }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: antrea/instance
                operator: NotIn
                values:
                - simulator
      {{- else }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      {{- end }}
      serviceAccountName: antrea-controller
      containers:
        - name: antrea-controller
          image: {{ include "antreaImage" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources: {{- .Values.controller.antreaController.resources | toYaml | nindent 12 }}
          {{- if ((.Values.testing).coverage) }}
          command: ["/bin/sh"]
          args: ["-c", "antrea-controller-coverage -test.run=TestBincoverRunMain -test.coverprofile=antrea-controller.cov.out -args-file=/controller-arg-file; while true; do sleep 5 & wait $!; done"]
          {{- else }}
          command: ["antrea-controller"]
          # Log to both "/var/log/antrea/" and stderr (so "kubectl logs" can work).
          args:
            - "--config=/etc/antrea/antrea-controller.conf"
            - "--logtostderr=false"
            - "--log_dir=/var/log/antrea"
            - "--alsologtostderr"
            - "--log_file_max_size={{ .Values.controller.antreaController.logFileMaxSize }}"
            - "--log_file_max_num={{ .Values.controller.antreaController.logFileMaxNum }}"
            {{- if .Values.logVerbosity }}
            - "--v={{ .Values.logVerbosity }}"
            {{- end }}
            {{- with .Values.controller.antreaController.extraArgs }}
            {{- toYaml . | trim | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
            # Provide pod and node information for clusterinformation CRD.
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Provide ServiceAccount name for validation webhook.
            - name: SERVICEACCOUNT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ANTREA_CONFIG_MAP_NAME
              value: antrea-config
            {{- range $k, $v := .Values.controller.antreaController.extraEnv }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}
          ports:
            - containerPort: 10349
              name: api
              protocol: TCP
          readinessProbe:
            httpGet:
              host: localhost
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          livenessProbe:
            httpGet:
              host: localhost
              path: /livez
              port: api
              scheme: HTTPS
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: antrea-config
              mountPath: /etc/antrea/antrea-controller.conf
              subPath: antrea-controller.conf
              readOnly: true
            - name: antrea-controller-tls
              mountPath: /var/run/antrea/antrea-controller-tls
            - name: host-var-log-antrea
              mountPath: /var/log/antrea
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
        # Make it optional as we only read it when selfSignedCert=false.
        - name: antrea-controller-tls
          secret:
            secretName: antrea-controller-tls
            defaultMode: 0400
            optional: true
        - name: host-var-log-antrea
          hostPath:
            path: /var/log/antrea
            type: DirectoryOrCreate
