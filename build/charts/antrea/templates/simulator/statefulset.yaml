{{- if .Values.testing.simulator.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: antrea-agent-simulator
  namespace: {{ .Release.Namespace }}
  labels:
    app: antrea
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: antrea
      component: antrea-agent-simulator
  serviceName: antrea-agent-simulator
  template:
    metadata:
      labels:
        app: antrea
        component: antrea-agent-simulator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: antrea/instance
                    operator: NotIn
                    values:
                      - simulator
      serviceAccountName: antrea-agent
      initContainers:
      - name: init-inotify-limit
        image: projects.registry.vmware.com/library/busybox:latest
        command: ['sysctl', '-w', 'fs.inotify.max_user_instances=200']
        securityContext:
          privileged: true
      volumes:
      - name: kubeconfig-volume
        secret:
          secretName: kubeconfig
      - name: logs-volume
        hostPath:
          path: /var/log
      containers:
      - name: simulator
        image: antrea/antrea-ubuntu-simulator:latest
        imagePullPolicy: IfNotPresent
        command: ['/usr/local/bin/antrea-agent-simulator', '-v', '5']
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        volumeMounts:
        - name: kubeconfig-volume
          mountPath: /kubeconfig
          readOnly: true
        - name: logs-volume
          mountPath: /var/log
      - name: hollow-kubelet
        image: projects.registry.vmware.com/antrea/kubemark:v1.18.4
        ports:
        - containerPort: 4194
        - containerPort: 10250
        - containerPort: 10255
        env:
        - name: CONTENT_TYPE
          valueFrom:
            configMapKeyRef:
              name: node-configmap
              key: content.type
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: [
          "/kubemark",
          "--morph=kubelet",
          "--name=$(NODE_NAME)",
          "--kubeconfig=/kubeconfig/admin.conf",
          "$(CONTENT_TYPE)",
          "--v=2",
          "--log-file=/var/log/kubelet-$(NODE_NAME).log",
          "--node-labels=antrea/instance=simulator",
        ]
        volumeMounts:
        - name: kubeconfig-volume
          mountPath: /kubeconfig
          readOnly: true
        - name: logs-volume
          mountPath: /var/log
        resources:
          requests:
            cpu: 20m
            memory: 50M
        securityContext:
          privileged: true
      - name: hollow-proxy
        image: projects.registry.vmware.com/antrea/kubemark:v1.18.4
        env:
        - name: CONTENT_TYPE
          valueFrom:
            configMapKeyRef:
              name: node-configmap
              key: content.type
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: [
          "/kubemark",
          "--morph=proxy",
          "--name=$(NODE_NAME)",
          "--use-real-proxier=false",
          "--kubeconfig=/kubeconfig/admin.conf",
          "$(CONTENT_TYPE)",
          "--alsologtostderr",
          "--v=2",
          "--log-file=/var/log/kubelet-$(NODE_NAME).log"
        ]
        volumeMounts:
        - name: kubeconfig-volume
          mountPath: /kubeconfig
          readOnly: true
        - name: logs-volume
          mountPath: /var/log
        resources:
          requests:
            cpu: 20m
            memory: 50M
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
{{- end }}
