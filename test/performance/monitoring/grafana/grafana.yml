---
apiVersion: v1
data:
  dashboard_provider.yaml: |-
    apiVersion: 1
    providers:
      - name: grafana-dashboards
        folder: ''
        type: file
        allowUiUpdates: true
        options:
          path: /opt/grafana/dashboards
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
---
apiVersion: v1
data:
  datasource_provider.yaml: |-
    # config file version
    apiVersion: 1

    # list of datasources that should be deleted from the database
    deleteDatasources:
      - name: Prometheus-Nodes
        orgId: 2

    # list of datasources to insert/update depending
    # whats available in the database
    datasources:
        # <string, required> name of the datasource. Required
      - name: Prometheus-Nodes
        # <string, required> datasource type. Required
        type: prometheus
        # <string, required> access mode. direct or proxy. Required
        access: proxy
        # <int> org id. will default to orgId 1 if not specified
        orgId: 1
        # <string> url
        url: "http://prometheus-service.monitoring.svc.cluster.local:8080"
        # <bool> mark as default datasource. Max one per org
        isDefault: false
        # <map> fields that will be converted to json and stored in json_data
kind: ConfigMap
metadata:
  name: grafana-datasources-provider
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    # Server configuration
    [server]
    protocol = http
    http_port = 3000

    # Database configuration
    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db
    # Authentication settings
    [auth]
    disable_login_form = false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 0
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - name: grafana-config
              mountPath: /etc/grafana
              readOnly: true
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-provider
            - mountPath: /opt/grafana/dashboards
              name: grafana-dashboards
            - name: grafana-datasources-provider
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-pv
          hostPath:
            path: /grafana/data
            type: DirectoryOrCreate
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-datasources-provider
          configMap:
            name: grafana-datasources-provider
        - name: grafana-dashboard-provider
          configMap:
            name: grafana-dashboard-provider
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - nodePort: 30100
      port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: NodePort