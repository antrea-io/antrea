// +build !ignore_autogenerated

// Copyright 2020 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	controlplane "github.com/vmware-tanzu/antrea/pkg/apis/controlplane"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	types "k8s.io/apimachinery/pkg/types"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*NetworkPolicyReference)(nil), (*controlplane.NetworkPolicyReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference(a.(*NetworkPolicyReference), b.(*controlplane.NetworkPolicyReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*controlplane.NetworkPolicyReference)(nil), (*NetworkPolicyReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference(a.(*controlplane.NetworkPolicyReference), b.(*NetworkPolicyReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NetworkPolicyStats)(nil), (*controlplane.NetworkPolicyStats)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NetworkPolicyStats_To_controlplane_NetworkPolicyStats(a.(*NetworkPolicyStats), b.(*controlplane.NetworkPolicyStats), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*controlplane.NetworkPolicyStats)(nil), (*NetworkPolicyStats)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_controlplane_NetworkPolicyStats_To_v1alpha1_NetworkPolicyStats(a.(*controlplane.NetworkPolicyStats), b.(*NetworkPolicyStats), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeStatsSummary)(nil), (*controlplane.NodeStatsSummary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeStatsSummary_To_controlplane_NodeStatsSummary(a.(*NodeStatsSummary), b.(*controlplane.NodeStatsSummary), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*controlplane.NodeStatsSummary)(nil), (*NodeStatsSummary)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_controlplane_NodeStatsSummary_To_v1alpha1_NodeStatsSummary(a.(*controlplane.NodeStatsSummary), b.(*NodeStatsSummary), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference(in *NetworkPolicyReference, out *controlplane.NetworkPolicyReference, s conversion.Scope) error {
	out.Type = controlplane.NetworkPolicyType(in.Type)
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.UID = types.UID(in.UID)
	return nil
}

// Convert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference is an autogenerated conversion function.
func Convert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference(in *NetworkPolicyReference, out *controlplane.NetworkPolicyReference, s conversion.Scope) error {
	return autoConvert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference(in, out, s)
}

func autoConvert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference(in *controlplane.NetworkPolicyReference, out *NetworkPolicyReference, s conversion.Scope) error {
	out.Type = NetworkPolicyType(in.Type)
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.UID = types.UID(in.UID)
	return nil
}

// Convert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference is an autogenerated conversion function.
func Convert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference(in *controlplane.NetworkPolicyReference, out *NetworkPolicyReference, s conversion.Scope) error {
	return autoConvert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference(in, out, s)
}

func autoConvert_v1alpha1_NetworkPolicyStats_To_controlplane_NetworkPolicyStats(in *NetworkPolicyStats, out *controlplane.NetworkPolicyStats, s conversion.Scope) error {
	if err := Convert_v1alpha1_NetworkPolicyReference_To_controlplane_NetworkPolicyReference(&in.NetworkPolicy, &out.NetworkPolicy, s); err != nil {
		return err
	}
	out.TrafficStats = in.TrafficStats
	return nil
}

// Convert_v1alpha1_NetworkPolicyStats_To_controlplane_NetworkPolicyStats is an autogenerated conversion function.
func Convert_v1alpha1_NetworkPolicyStats_To_controlplane_NetworkPolicyStats(in *NetworkPolicyStats, out *controlplane.NetworkPolicyStats, s conversion.Scope) error {
	return autoConvert_v1alpha1_NetworkPolicyStats_To_controlplane_NetworkPolicyStats(in, out, s)
}

func autoConvert_controlplane_NetworkPolicyStats_To_v1alpha1_NetworkPolicyStats(in *controlplane.NetworkPolicyStats, out *NetworkPolicyStats, s conversion.Scope) error {
	if err := Convert_controlplane_NetworkPolicyReference_To_v1alpha1_NetworkPolicyReference(&in.NetworkPolicy, &out.NetworkPolicy, s); err != nil {
		return err
	}
	out.TrafficStats = in.TrafficStats
	return nil
}

// Convert_controlplane_NetworkPolicyStats_To_v1alpha1_NetworkPolicyStats is an autogenerated conversion function.
func Convert_controlplane_NetworkPolicyStats_To_v1alpha1_NetworkPolicyStats(in *controlplane.NetworkPolicyStats, out *NetworkPolicyStats, s conversion.Scope) error {
	return autoConvert_controlplane_NetworkPolicyStats_To_v1alpha1_NetworkPolicyStats(in, out, s)
}

func autoConvert_v1alpha1_NodeStatsSummary_To_controlplane_NodeStatsSummary(in *NodeStatsSummary, out *controlplane.NodeStatsSummary, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.NetworkPolicies = *(*[]controlplane.NetworkPolicyStats)(unsafe.Pointer(&in.NetworkPolicies))
	out.AntreaClusterNetworkPolicies = *(*[]controlplane.NetworkPolicyStats)(unsafe.Pointer(&in.AntreaClusterNetworkPolicies))
	out.AntreaNetworkPolicies = *(*[]controlplane.NetworkPolicyStats)(unsafe.Pointer(&in.AntreaNetworkPolicies))
	return nil
}

// Convert_v1alpha1_NodeStatsSummary_To_controlplane_NodeStatsSummary is an autogenerated conversion function.
func Convert_v1alpha1_NodeStatsSummary_To_controlplane_NodeStatsSummary(in *NodeStatsSummary, out *controlplane.NodeStatsSummary, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeStatsSummary_To_controlplane_NodeStatsSummary(in, out, s)
}

func autoConvert_controlplane_NodeStatsSummary_To_v1alpha1_NodeStatsSummary(in *controlplane.NodeStatsSummary, out *NodeStatsSummary, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.NetworkPolicies = *(*[]NetworkPolicyStats)(unsafe.Pointer(&in.NetworkPolicies))
	out.AntreaClusterNetworkPolicies = *(*[]NetworkPolicyStats)(unsafe.Pointer(&in.AntreaClusterNetworkPolicies))
	out.AntreaNetworkPolicies = *(*[]NetworkPolicyStats)(unsafe.Pointer(&in.AntreaNetworkPolicies))
	return nil
}

// Convert_controlplane_NodeStatsSummary_To_v1alpha1_NodeStatsSummary is an autogenerated conversion function.
func Convert_controlplane_NodeStatsSummary_To_v1alpha1_NodeStatsSummary(in *controlplane.NodeStatsSummary, out *NodeStatsSummary, s conversion.Scope) error {
	return autoConvert_controlplane_NodeStatsSummary_To_v1alpha1_NodeStatsSummary(in, out, s)
}
