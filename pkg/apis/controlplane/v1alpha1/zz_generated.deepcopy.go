// +build !ignore_autogenerated

// Copyright 2020 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPolicyReference) DeepCopyInto(out *NetworkPolicyReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPolicyReference.
func (in *NetworkPolicyReference) DeepCopy() *NetworkPolicyReference {
	if in == nil {
		return nil
	}
	out := new(NetworkPolicyReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPolicyStats) DeepCopyInto(out *NetworkPolicyStats) {
	*out = *in
	out.NetworkPolicy = in.NetworkPolicy
	out.TrafficStats = in.TrafficStats
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPolicyStats.
func (in *NetworkPolicyStats) DeepCopy() *NetworkPolicyStats {
	if in == nil {
		return nil
	}
	out := new(NetworkPolicyStats)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeStatsSummary) DeepCopyInto(out *NodeStatsSummary) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.NetworkPolicies != nil {
		in, out := &in.NetworkPolicies, &out.NetworkPolicies
		*out = make([]NetworkPolicyStats, len(*in))
		copy(*out, *in)
	}
	if in.AntreaClusterNetworkPolicies != nil {
		in, out := &in.AntreaClusterNetworkPolicies, &out.AntreaClusterNetworkPolicies
		*out = make([]NetworkPolicyStats, len(*in))
		copy(*out, *in)
	}
	if in.AntreaNetworkPolicies != nil {
		in, out := &in.AntreaNetworkPolicies, &out.AntreaNetworkPolicies
		*out = make([]NetworkPolicyStats, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeStatsSummary.
func (in *NodeStatsSummary) DeepCopy() *NodeStatsSummary {
	if in == nil {
		return nil
	}
	out := new(NodeStatsSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeStatsSummary) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
