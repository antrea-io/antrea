// Copyright 2020 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.vmware_tanzu.antrea.pkg.apis.networking.v1beta1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "k8s.io/apimachinery/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1beta1";

// +genclient
// +genclient:nonNamespaced
// +genclient:onlyVerbs=list,get,watch
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AddressGroup is the message format of antrea/pkg/controller/types.AddressGroup in an API response.
message AddressGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  repeated GroupMemberPod pods = 2;

  repeated GroupMember groupMembers = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AddressGroupList is a list of AddressGroup objects.
message AddressGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated AddressGroup items = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AddressGroupPatch describes the incremental update of an AddressGroup.
message AddressGroupPatch {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  repeated GroupMemberPod addedPods = 2;

  repeated GroupMemberPod removedPods = 3;

  repeated GroupMember addedGroupMembers = 4;

  repeated GroupMember removedGroupMembers = 5;
}

// +genclient
// +genclient:nonNamespaced
// +genclient:onlyVerbs=list,get,watch
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AppliedToGroup is the message format of antrea/pkg/controller/types.AppliedToGroup in an API response.
message AppliedToGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Pods is a list of Pods selected by this group.
  repeated GroupMemberPod pods = 2;

  // GroupMembers is list of resources selected by this group. This eventually will replace Pods
  repeated GroupMember groupMembers = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AppliedToGroupList is a list of AppliedToGroup objects.
message AppliedToGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated AppliedToGroup items = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AppliedToGroupPatch describes the incremental update of an AppliedToGroup.
message AppliedToGroupPatch {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  repeated GroupMemberPod addedPods = 2;

  repeated GroupMemberPod removedPods = 3;

  repeated GroupMember addedGroupMembers = 4;

  repeated GroupMember removedGroupMembers = 5;
}

// Endpoint represents an external endpoint.
message Endpoint {
  // IP is the IP address of the Endpoint.
  optional bytes ip = 1;

  // Ports is the list NamedPort of the Endpoint.
  repeated NamedPort ports = 2;
}

// ExternalEntityReference represents a ExternalEntity Reference.
message ExternalEntityReference {
  // The name of this ExternalEntity.
  optional string name = 1;

  // The namespace of this ExternalEntity.
  optional string namespace = 2;
}

// GroupMember represents resource member to be populated in Groups.
// This supersedes GroupMemberPod, and will eventually replace it.
message GroupMember {
  // ExternalEntity maintains the reference to the ExternalEntity.
  optional ExternalEntityReference externalEntity = 1;

  // Pod maintains the reference to the Pod.
  optional PodReference pod = 2;

  // Endpoints maintains a list of EndPoints associated with this groupMember.
  repeated Endpoint endpoints = 3;
}

// GroupMemberPod represents a GroupMember related to Pods.
message GroupMemberPod {
  // Pod maintains the reference to the Pod.
  optional PodReference pod = 1;

  // IP maintains the IPAddress associated with the Pod.
  optional bytes ip = 2;

  // Ports maintain the named port mapping of this Pod.
  repeated NamedPort ports = 3;
}

// IPBlock describes a particular CIDR (Ex. "192.168.1.1/24"). The except entry describes CIDRs that should
// not be included within this rule.
message IPBlock {
  // CIDR is an IPNet represents the IP Block.
  optional IPNet cidr = 1;

  // Except is a slice of IPNets that should not be included within an IP Block.
  // Except values will be rejected if they are outside the CIDR range.
  // +optional
  repeated IPNet except = 2;
}

// IPNet describes an IP network.
message IPNet {
  optional bytes ip = 1;

  optional int32 prefixLength = 2;
}

// NamedPort represents a Port with a name on Pod.
message NamedPort {
  // Port represents the Port number.
  optional int32 port = 1;

  // Name represents the associated name with this Port number.
  optional string name = 2;

  // Protocol for port. Must be UDP, TCP, or SCTP.
  optional string protocol = 3;
}

// +genclient
// +genclient:onlyVerbs=list,get,watch
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// NetworkPolicy is the message format of antrea/pkg/controller/types.NetworkPolicy in an API response.
message NetworkPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Rules is a list of rules to be applied to the selected Pods.
  repeated NetworkPolicyRule rules = 2;

  // AppliedToGroups is a list of names of AppliedToGroups to which this policy applies.
  repeated string appliedToGroups = 3;

  // Priority represents the relative priority of this Network Policy as compared to
  // other Network Policies. Priority will be unset (nil) for K8s Network Policy.
  optional double priority = 4;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// NetworkPolicyList is a list of NetworkPolicy objects.
message NetworkPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated NetworkPolicy items = 2;
}

// NetworkPolicyPeer describes a peer of NetworkPolicyRules.
// It could be a list of names of AddressGroups and/or a list of IPBlock.
message NetworkPolicyPeer {
  // A list of names of AddressGroups.
  repeated string addressGroups = 1;

  // A list of IPBlock.
  repeated IPBlock ipBlocks = 2;
}

// NetworkPolicyRule describes a particular set of traffic that is allowed.
message NetworkPolicyRule {
  // The direction of this rule.
  // If it's set to In, From must be set and To must not be set.
  // If it's set to Out, To must be set and From must not be set.
  optional string direction = 1;

  // From represents sources which should be able to access the pods selected by the policy.
  optional NetworkPolicyPeer from = 2;

  // To represents destinations which should be able to be accessed by the pods selected by the policy.
  optional NetworkPolicyPeer to = 3;

  // Services is a list of services which should be matched.
  repeated Service services = 4;

  // Priority defines the priority of the Rule as compared to other rules in the
  // NetworkPolicy.
  optional int32 priority = 5;

  // Action specifies the action to be applied on the rule. i.e. Allow/Drop. An empty
  // action “nil” defaults to Allow action, which would be the case for rules created for
  // K8s Network Policy.
  optional string action = 6;
}

// PodReference represents a Pod Reference.
message PodReference {
  // The name of this pod.
  optional string name = 1;

  // The namespace of this pod.
  optional string namespace = 2;
}

// Service describes a port to allow traffic on.
message Service {
  // The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this
  // field defaults to TCP.
  // +optional
  optional string protocol = 1;

  // The port name or number on the given protocol. If not specified, this matches all port numbers.
  // +optional
  optional k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;
}

