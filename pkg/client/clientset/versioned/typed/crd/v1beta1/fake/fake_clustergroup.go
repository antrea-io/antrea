// Copyright 2025 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "antrea.io/antrea/pkg/apis/crd/v1beta1"
	crdv1beta1 "antrea.io/antrea/pkg/client/clientset/versioned/typed/crd/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterGroups implements ClusterGroupInterface
type fakeClusterGroups struct {
	*gentype.FakeClientWithList[*v1beta1.ClusterGroup, *v1beta1.ClusterGroupList]
	Fake *FakeCrdV1beta1
}

func newFakeClusterGroups(fake *FakeCrdV1beta1) crdv1beta1.ClusterGroupInterface {
	return &fakeClusterGroups{
		gentype.NewFakeClientWithList[*v1beta1.ClusterGroup, *v1beta1.ClusterGroupList](
			fake.Fake,
			"",
			v1beta1.SchemeGroupVersion.WithResource("clustergroups"),
			v1beta1.SchemeGroupVersion.WithKind("ClusterGroup"),
			func() *v1beta1.ClusterGroup { return &v1beta1.ClusterGroup{} },
			func() *v1beta1.ClusterGroupList { return &v1beta1.ClusterGroupList{} },
			func(dst, src *v1beta1.ClusterGroupList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.ClusterGroupList) []*v1beta1.ClusterGroup {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.ClusterGroupList, items []*v1beta1.ClusterGroup) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
