// Copyright 2025 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "antrea.io/antrea/pkg/apis/crd/v1alpha1"
	crdv1alpha1 "antrea.io/antrea/pkg/client/clientset/versioned/typed/crd/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeFlowExporterDestinations implements FlowExporterDestinationInterface
type fakeFlowExporterDestinations struct {
	*gentype.FakeClientWithList[*v1alpha1.FlowExporterDestination, *v1alpha1.FlowExporterDestinationList]
	Fake *FakeCrdV1alpha1
}

func newFakeFlowExporterDestinations(fake *FakeCrdV1alpha1) crdv1alpha1.FlowExporterDestinationInterface {
	return &fakeFlowExporterDestinations{
		gentype.NewFakeClientWithList[*v1alpha1.FlowExporterDestination, *v1alpha1.FlowExporterDestinationList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("flowexporterdestinations"),
			v1alpha1.SchemeGroupVersion.WithKind("FlowExporterDestination"),
			func() *v1alpha1.FlowExporterDestination { return &v1alpha1.FlowExporterDestination{} },
			func() *v1alpha1.FlowExporterDestinationList { return &v1alpha1.FlowExporterDestinationList{} },
			func(dst, src *v1alpha1.FlowExporterDestinationList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.FlowExporterDestinationList) []*v1alpha1.FlowExporterDestination {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.FlowExporterDestinationList, items []*v1alpha1.FlowExporterDestination) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
