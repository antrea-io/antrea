// Copyright 2024 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package v1beta2

import (
	"context"

	v1beta2 "antrea.io/antrea/pkg/apis/controlplane/v1beta2"
	scheme "antrea.io/antrea/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// SupportBundleCollectionsGetter has a method to return a SupportBundleCollectionInterface.
// A group's client should implement this interface.
type SupportBundleCollectionsGetter interface {
	SupportBundleCollections() SupportBundleCollectionInterface
}

// SupportBundleCollectionInterface has methods to work with SupportBundleCollection resources.
type SupportBundleCollectionInterface interface {
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta2.SupportBundleCollection, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta2.SupportBundleCollectionList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	SupportBundleCollectionExpansion
}

// supportBundleCollections implements SupportBundleCollectionInterface
type supportBundleCollections struct {
	*gentype.ClientWithList[*v1beta2.SupportBundleCollection, *v1beta2.SupportBundleCollectionList]
}

// newSupportBundleCollections returns a SupportBundleCollections
func newSupportBundleCollections(c *ControlplaneV1beta2Client) *supportBundleCollections {
	return &supportBundleCollections{
		gentype.NewClientWithList[*v1beta2.SupportBundleCollection, *v1beta2.SupportBundleCollectionList](
			"supportbundlecollections",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1beta2.SupportBundleCollection { return &v1beta2.SupportBundleCollection{} },
			func() *v1beta2.SupportBundleCollectionList { return &v1beta2.SupportBundleCollectionList{} }),
	}
}
