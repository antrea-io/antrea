name: Update CHANGELOG and Renovate monitored branches after release

on:
  push:
    tags:
      - v*

jobs:
  check-version:
    runs-on: [ubuntu-latest]
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Extract version from Github ref
        id: get-version
        env:
          TAG: ${{ github.ref }}
        shell: bash
        run: |
          version=${TAG:10}
          if [[ "$version" == *-* ]]; then
            echo "$version is a release candidate or a pre-release"
            exit 0
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

  get-latest-monitored-versions:
    runs-on: [ubuntu-latest]
    needs: check-version
    if: ${{ needs.check-version.outputs.version != '' }}
    outputs:
      versions: ${{ steps.get-versions.outputs.versions }}
    steps:
      - name: Get latest 3 versions
        id: get-versions
        shell: bash
        run: |
          versions=($(git ls-remote --sort -version:refname --branches https://github.com/antrea-io/antrea.git refs/heads/release-\* | awk '{print $2}' | awk -F/ '{print $3}' | head -3))
          if [ ${#versions[@]} -eq 3 ]; then
            versions_string="${versions[*]}"
            echo "versions=$versions_string" >> $GITHUB_OUTPUT
          else
            echo "Could not find the release branches. Found: ${#versions[@]}"
            exit 0
          fi

  pr-update-changelog:
    runs-on: [ubuntu-latest]
    needs: check-version
    if: ${{ needs.check-version.outputs.version != '' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: main
      - name: Cherry-pick changelog commit
        env:
          VERSION: ${{ needs.check-version.outputs.version }}
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          commit_hash=$(git log "$VERSION" --format="%H" --grep="Update CHANGELOG for $VERSION release")
          if [[ -z "$commit_hash" ]]; then
            echo "Cannot find commit"
            exit 1
          fi
          git cherry-pick "$commit_hash"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ANTREA_BOT_WRITE_PAT }}
          delete-branch: true
          title: "Update CHANGELOG for ${{ needs.check-version.outputs.version }} release"
          body: |
            PR was opened automatically from Github Actions
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  pr-update-renovate:
    runs-on: [ubuntu-latest]
    needs: get-latest-monitored-versions
    if: ${{ needs.get-latest-monitored-versions.outputs.versions != '' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: main
      - name: Update renovate baseBranches
        env:
          VERSIONS: ${{ needs.get-latest-monitored-versions.outputs.versions }}
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          read -ra versions_array <<< "$VERSIONS"
          ./hack/update-renovate-baseBranches.sh "${versions_array[@]}"
          if ! git diff --quiet; then
            git add .
            git commit --signoff -m "chore(renovate): update baseBranches configuration"
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ANTREA_BOT_WRITE_PAT }}
          delete-branch: true
          title: "chore(renovate): update baseBranches configuration"
          body: |
            Update renovate configuration to monitor latest 3 minor versions.
            PR was opened automatically from Github Actions
