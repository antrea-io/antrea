apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: CLUSTERNAME
    jenkins-test: 
  name: CLUSTERNAME
  namespace: CLUSTERNAMESPACE
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: CLUSTERNAME-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AWSCluster
    name: CLUSTERNAME
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSCluster
metadata:
  name: CLUSTERNAME
  namespace: CLUSTERNAMESPACE
spec:
  region: us-west-2
  sshKeyName: SSHAUTHORIZEDKEYS
  network: 
    vpc: 
      id: VPCID
    subnets:
    - id: SUBNETID
    securityGroupOverrides:
      node: NODESG
      controlplane: CONTROLPLANESG
  controlPlaneLoadBalancer:
    scheme: internal
    healthCheckProtocol: TCP
    subnets: [SUBNETID]
    additionalSecurityGroups: [CONTROLPLANESG]
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: CLUSTERNAME-control-plane
  namespace: CLUSTERNAMESPACE
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{ ds.meta_data.local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{ ds.meta_data.local_hostname }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AWSMachineTemplate
      name: CLUSTERNAME-control-plane
  replicas: 1
  version: K8SVERSION
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: CLUSTERNAME-control-plane
  namespace: CLUSTERNAMESPACE
spec:
  template:
    spec:
      subnet:
        id: SUBNETID
      publicIP: false
      ami:
        id: AMIID
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      instanceType: t2.xlarge
      rootVolume:
        size: 16
      sshKeyName: SSHAUTHORIZEDKEYS
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: CLUSTERNAME
  name: CLUSTERNAME-md-0
  namespace: CLUSTERNAMESPACE
spec:
  clusterName: CLUSTERNAME
  replicas: 2
  selector:
    matchLabels: null
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: CLUSTERNAME
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: CLUSTERNAME-md-0
      clusterName: CLUSTERNAME
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
        name: CLUSTERNAME-md-0
      version: K8SVERSION
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: CLUSTERNAME-md-0
  namespace: CLUSTERNAMESPACE
spec:
  template:
    spec:
      subnet:
        id: SUBNETID
      publicIP: false
      ami:
        id: AMIID
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
      instanceType: t2.xlarge
      rootVolume:
        size: 16
      sshKeyName: SSHAUTHORIZEDKEYS
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: CLUSTERNAME-md-0
  namespace: CLUSTERNAMESPACE
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
          name: '{{ ds.meta_data.local_hostname }}'
