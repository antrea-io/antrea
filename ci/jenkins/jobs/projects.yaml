- project:
    # ghpr_auth, antrea_admin_list, antrea_org_list and antrea_white_list
    # should be defined as a global variable somewhere else
    name: antrea
    git_credentials_id: ANTREA_GIT_CREDENTIAL
    org_repo: vmware-tanzu/antrea
    jobs:
      - '{name}-{test_name}-for-period':
          test_name: job-updater
          node: 'antrea-test-node'
          description: 'This is for updating all antrea jobs.'
          builders:
            - builder-job-updater
          branches:
          - '*/master'
          included_regions:
          - ci/jenkins/jobs/.*
          cron: 'H/15 * * * *'
          ignore_post_commit_hooks: false
          publishers: []
      - '{name}-{test_name}-for-period':
          test_name: daily-whole-conformance
          node: 'antrea-test-node'
          description: 'This is for testing all conformance daily.'
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-conformance:
                mode_regex: 'certified-conformance'
                focus_regex: ''
                skip_regex: ''
            - builder-workload-cluster-cleanup
          branches:
          - '*/master'
          included_regions: []
          cron: 'H H * * *'
          ignore_post_commit_hooks: false
          publishers:
          - email:
              recipients: projectantrea-dev@googlegroups.com
      - '{name}-{test_name}-for-period':
          test_name: daily-elk-flow-collector-validate
          node: 'antrea-test-node'
          description: 'This is for validating the elk flow collector manifest daily.'
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-elk-flow-collector
            - builder-workload-cluster-cleanup
          branches:
          - '*/master'
          included_regions: []
          cron: 'H H * * *'
          ignore_post_commit_hooks: false
          publishers:
          - email:
              recipients: projectantrea-dev@googlegroups.com
      - '{name}-{test_name}-for-gc':
          test_name: workload-cluster
          node: 'antrea-test-node'
          description: 'This is for deleting useless workload clusters.'
          builders:
            - builder-workload-cluster-gc
          timed: 'H * * * *'
      - '{name}-{test_name}-for-pull-request':
          test_name: list-tests
          node: null
          description: 'This is for listing all test choices.'
          branches:
          - ${{sha1}}
          builders:
            - builder-list-tests:
                org_repo: '{org_repo}'
          trigger_phrase: null
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list:
          - nobody123_nobody123_
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: should_disappear # this value doesn't matter.
          status_url: null
          success_status: --none--
          failure_status: --none--
          error_status: --none--
          triggered_status: --none--
          started_status: --none--
          wrappers:
            - credentials-binding:
                - username-password:
                    credential-id: '{git_credentials_id}'
                    variable: GH_CREDENTIAL
          publishers: []
      - '{name}-{test_name}-job-validator':
          test_name: jenkins-job-validator
          node: 'antrea-test-node'
          description: 'This is for validating jenkins jobs code.'
          builders:
            - builder-job-validator
          trigger_phrase: null
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list:
          - nobody123_nobody123_
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: jenkins-jobs-validator
          status_url: null
          success_status: Validator passed.
          failure_status: Failed.
          error_status: Failed.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
          included_regions:
          - ci/jenkins/jobs/.*
      - '{name}-{test_name}-for-pull-request':
          test_name: integration
          node: 'antrea-test-node'
          description: 'This is the {test_name} test for {name}.'
          branches:
          - ${{sha1}}
          builders:
          - builder-integration
          trigger_phrase: null
          white_list_target_branches:
          - ipv6
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list:
          - nobody123_nobody123_
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: jenkins-integration
          status_url: null
          success_status: Build finished.
          failure_status: Failed.
          error_status: Failed.
          triggered_status: null
          started_status: null
          wrappers:
          - timeout:
              fail: true
              timeout: 10
              type: absolute
          - credentials-binding:
              - text:
                  credential-id: GOVC_URL
                  variable: GOVC_URL
              - text:
                  credential-id: GOVC_USERNAME
                  variable: GOVC_USERNAME
              - text:
                  credential-id: GOVC_PASSWORD
                  variable: GOVC_PASSWORD
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: e2e-pending-label
          node: null
          description: 'This is for marking PR as pending for e2e test.'
          branches:
          - ${{sha1}}
          builders:
            - builder-pending-label
          trigger_phrase: null
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list: []
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: jenkins-e2e
          status_url: --none--
          success_status: Pending test. Mark as failure. Add comment /test-e2e to trigger.
          failure_status: Pending test. Mark as failure. Add comment /test-e2e to trigger.
          error_status: Pending test. Mark as failure. Add comment /test-e2e to trigger.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: e2e
          node: 'antrea-test-node'
          description: 'This is the {test_name} test for {name}.'
          branches:
          - ${{sha1}}
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-e2e
            - builder-workload-cluster-cleanup
          trigger_phrase: ^(?!Thanks for your PR).*/test-(e2e|all).*
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          status_context: jenkins-e2e
          status_url: null
          success_status: Build finished.
          failure_status: Failed. Add comment /test-e2e to re-trigger.
          error_status: Failed. Add comment /test-e2e to re-trigger.
          triggered_status: null
          started_status: null
          wrappers:
          - timeout:
              fail: true
              timeout: 80
              type: absolute
          publishers:
          - archive:
              allow-empty: true
              artifacts: antrea-test-logs.tar.gz
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
      - '{name}-{test_name}-for-pull-request':
          test_name: e2e-skip
          node: null
          description: 'This is for marking PR as passed.'
          branches:
          - ${{sha1}}
          builders: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          trigger_phrase: ^(?!Thanks for your PR).*/skip-(e2e|all).*
          white_list_target_branches: []
          status_context: jenkins-e2e
          status_url: --none--
          success_status: Skipped test. Mark as succeeded.
          failure_status: Skipped test. Mark as succeeded.
          error_status: Skipped test. Mark as succeeded.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: conformance-pending-label
          node: null
          description: 'This is for marking PR as pending for conformance test.'
          branches:
          - ${{sha1}}
          builders:
            - builder-pending-label
          trigger_phrase: null
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list: []
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: jenkins-conformance
          status_url: --none--
          success_status: Pending test. Mark as failure. Add comment /test-conformance to trigger.
          failure_status: Pending test. Mark as failure. Add comment /test-conformance to trigger.
          error_status: Pending test. Mark as failure. Add comment /test-conformance to trigger.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: conformance
          node: 'antrea-test-node'
          description: 'This is the {test_name} test for {name}.'
          branches:
          - ${{sha1}}
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-conformance:
                mode_regex: ''
                focus_regex: '\[Conformance\]'
                skip_regex: '\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[sig-cli\]|\[sig-storage\]|\[sig-auth\]|\[sig-api-machinery\]|\[sig-apps\]|\[sig-node\]'
            - builder-workload-cluster-cleanup
          trigger_phrase: ^(?!Thanks for your PR).*/test-(conformance|all).*
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          status_context: jenkins-conformance
          status_url: null
          success_status: Build finished.
          failure_status: Failed. Add comment /test-conformance to re-trigger.
          error_status: Failed. Add comment /test-conformance to re-trigger.
          triggered_status: null
          started_status: null
          wrappers:
          - timeout:
              fail: true
              timeout: 80
              type: absolute
          publishers:
          - archive:
              allow-empty: true
              artifacts: '*sonobuoy*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
      - '{name}-{test_name}-for-pull-request':
          test_name: conformance-skip
          node: null
          description: 'This is for marking PR as passed.'
          branches:
          - ${{sha1}}
          builders: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          trigger_phrase: ^(?!Thanks for your PR).*/skip-(conformance|all).*
          white_list_target_branches: []
          status_context: jenkins-conformance
          status_url: --none--
          success_status: Skipped test. Mark as succeeded.
          failure_status: Skipped test. Mark as succeeded.
          error_status: Skipped test. Mark as succeeded.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: whole-conformance
          node: 'antrea-test-node'
          description: 'This is the {test_name} test for {name}.'
          branches:
          - ${{sha1}}
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-conformance:
                mode_regex: 'certified-conformance'
                focus_regex: ''
                skip_regex: ''
            - builder-workload-cluster-cleanup
          trigger_phrase: .*/test-(whole-conformance).*
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          status_context: jenkins-whole-conformance
          status_url: null
          success_status: Build finished.
          failure_status: Failed. Add comment /test-whole-conformance to re-trigger.
          error_status: Failed. Add comment /test-whole-conformance to re-trigger.
          triggered_status: null
          started_status: null
          wrappers:
          - timeout:
              fail: true
              timeout: 150
              type: absolute
          publishers:
          - archive:
              allow-empty: true
              artifacts: '*sonobuoy*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
      - '{name}-{test_name}-for-pull-request':
          test_name: whole-conformance-skip
          node: null
          description: 'This is for marking PR as passed.'
          branches:
          - ${{sha1}}
          builders: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          trigger_phrase: .*/skip-(whole-conformance).*
          white_list_target_branches: []
          status_context: jenkins-whole-conformance
          status_url: --none--
          success_status: Skipped test. Mark as succeeded.
          failure_status: Skipped test. Mark as succeeded.
          error_status: Skipped test. Mark as succeeded.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: networkpolicy-pending-label
          node: null
          description: 'This is for marking PR as pending for networkpolicy test.'
          branches:
          - ${{sha1}}
          builders:
            - builder-pending-label
          trigger_phrase: null
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: false
          admin_list: []
          org_list: []
          white_list: []
          only_trigger_phrase: false
          trigger_permit_all: true
          status_context: jenkins-networkpolicy
          status_url: --none--
          success_status: Pending test. Mark as failure. Add comment /test-networkpolicy to trigger.
          failure_status: Pending test. Mark as failure. Add comment /test-networkpolicy to trigger.
          error_status: Pending test. Mark as failure. Add comment /test-networkpolicy to trigger.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - '{name}-{test_name}-for-pull-request':
          test_name: networkpolicy
          node: 'antrea-test-node'
          description: 'This is the {test_name} test for {name}.'
          branches:
          - ${{sha1}}
          builders:
            - builder-workload-cluster-setup
            - builder-prepare-antrea
            - builder-conformance:
                mode_regex: ''
                focus_regex: '\[Feature:NetworkPolicy\]'
                skip_regex: 'SKIP_NO_TESTCASE'
            - builder-workload-cluster-cleanup
          trigger_phrase: ^(?!Thanks for your PR).*/test-(networkpolicy|all).*
          white_list_target_branches: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          status_context: jenkins-networkpolicy
          status_url: null
          success_status: Build finished.
          failure_status: Failed. Add comment /test-networkpolicy to re-trigger.
          error_status: Failed. Add comment /test-networkpolicy to re-trigger.
          triggered_status: null
          started_status: null
          wrappers:
          - timeout:
              fail: true
              timeout: 80
              type: absolute
          publishers:
          - archive:
              allow-empty: true
              artifacts: '*sonobuoy*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
      - '{name}-{test_name}-for-pull-request':
          test_name: networkpolicy-skip
          node: null
          description: 'This is for marking PR as passed.'
          branches:
          - ${{sha1}}
          builders: []
          allow_whitelist_orgs_as_admins: true
          admin_list: '{antrea_admin_list}'
          org_list: '{antrea_org_list}'
          white_list: '{antrea_white_list}'
          only_trigger_phrase: true
          trigger_permit_all: false
          trigger_phrase: ^(?!Thanks for your PR).*/skip-(networkpolicy|all).*
          white_list_target_branches: []
          status_context: jenkins-networkpolicy
          status_url: --none--
          success_status: Skipped test. Mark as succeeded.
          failure_status: Skipped test. Mark as succeeded.
          error_status: Skipped test. Mark as succeeded.
          triggered_status: null
          started_status: null
          wrappers: []
          publishers: []
      - 'cloud-{name}-{test_name}':
          test_name: eks-conformance-net-policy
          node: antrea-cloud
          description: 'This is EKS conformance and network policy test for antrea.'
          parameters: []
          builders:
          - shell: |-
              #!/bin/bash
              source /home/ubuntu/.bashrc
              sudo ./ci/test-conformance-eks.sh --aws-access-key ${{AWS_ACCESS_KEY}} --aws-secret-key ${{AWS_SECRET_KEY}} \
                --cluster-name ${{JOB_NAME}}-${{BUILD_NUMBER}} --log-mode detail --setup-only
          triggers:
          - timed: H H */2 * *
          publishers:
          - archive:
              allow-empty: true
              artifacts: 'eks-test.log, ci/*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
          - trigger-parameterized-builds:
            - project:
              - cloud-{name}-eks-cleanup
              property-file: 'ci_properties.txt'
          wrappers:
          - credentials-binding:
            - text:
                credential-id: AWS_ACCESS_KEY # Jenkins secret that stores aws access key
                variable: AWS_ACCESS_KEY
            - text:
                credential-id: AWS_SECRET_KEY # Jenkins secret that stores aws secret key
                variable: AWS_SECRET_KEY
      - 'cloud-{name}-{test_name}':
          test_name: eks-cleanup
          description: This is for deleting EKS test clusters.
          builders:
            - builder-eks-cluster-cleanup
          concurrent: false
          disabled: false
          node: antrea-cloud
          parameters:
          - string:
              default: ''
              description: The cluster name of the last finished build.
              name: CLUSTERNAME
              trim: 'false'
          publishers:
          - email:
              notify-every-unstable-build: true
              recipients: dingyang@vmware.com zhengshengz@vmware.com
              send-to-individuals: false
          triggers: []
          wrappers: []
      - 'cloud-{name}-{test_name}':
          test_name: gke-conformance-net-policy
          node: antrea-cloud
          description: 'This is GKE conformance and network policy test for antrea.'
          parameters: []
          builders:
          - shell: |-
              #!/bin/bash
              source /home/ubuntu/.bashrc
              # gcloud auth login requires verification code from url
              ${{GCLOUD_PATH}} auth activate-service-account --key-file=${{GCLOUD_KEY_PATH}}
              sudo ./ci/test-conformance-gke.sh --cluster-name antrea-gke-${{BUILD_NUMBER}} \
                --k8s-version 1.16.11-gke.5 --svc-account antrea-gcp@antrea.iam.gserviceaccount.com \
                --gcloud-path ${{GCLOUD_PATH}} --log-mode detail --setup-only
          triggers:
          - timed: H H */2 * *
          publishers:
          - archive:
              allow-empty: true
              artifacts: 'gke-test.log, ci/*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
          - trigger-parameterized-builds:
            - project:
              - cloud-{name}-gke-cleanup
              property-file: 'ci_properties.txt'
          wrappers: []
      - 'cloud-{name}-{test_name}':
          test_name: gke-cleanup
          description: This is for deleting GKE test clusters.
          builders:
            - builder-gke-cluster-cleanup
          concurrent: false
          disabled: false
          node: antrea-cloud
          parameters:
          - string:
              default: ''
              description: The cluster name of the last finished build.
              name: CLUSTERNAME
              trim: 'false'
          publishers:
          - email:
              notify-every-unstable-build: true
              recipients: dingyang@vmware.com zhengshengz@vmware.com
              send-to-individuals: false
          triggers: []
          wrappers: []
      - 'cloud-{name}-{test_name}':
          test_name: aks-conformance-net-policy
          node: antrea-cloud
          description: 'This is AKS conformance and network policy test for antrea.'
          parameters: []
          builders:
          - shell: |-
              #!/bin/bash
              source /home/ubuntu/.bashrc
              sudo ./ci/test-conformance-aks.sh --azure-app-id ${{AZURE_APP_ID}} --azure-password ${{AZURE_PASSWORD}} \
                --azure-tenant-id ${{AZURE_TENANT_ID}} --cluster-name ${{JOB_NAME}}-${{BUILD_NUMBER}} \
                --log-mode detail --setup-only
          triggers:
          - timed: H H */2 * *
          publishers:
          - archive:
              allow-empty: true
              artifacts: 'aks-test.log, ci/*.tar.gz'
              case-sensitive: true
              default-excludes: true
              fingerprint: false
              only-if-success: false
          - trigger-parameterized-builds:
            - project:
              - cloud-{name}-aks-cleanup
              property-file: 'ci_properties.txt'
          wrappers:
          - credentials-binding:
            - text:
                credential-id: AZURE_APP_ID # Jenkins secret that stores azure app id
                variable: AZURE_APP_ID
            - text:
                credential-id: AZURE_PASSWORD # Jenkins secret that stores azure password
                variable: AZURE_PASSWORD
            - text:
                credential-id: AZURE_TENANT_ID # Jenkins secret that stores azure tenant id
                variable: AZURE_TENANT_ID
      - 'cloud-{name}-{test_name}':
          test_name: aks-cleanup
          description: This is for deleting AKS test clusters.
          builders:
            - builder-aks-cluster-cleanup
          concurrent: false
          disabled: false
          node: antrea-cloud
          parameters:
          - string:
              default: ''
              description: The cluster name of the last finished build.
              name: CLUSTERNAME
              trim: 'false'
          publishers:
          - email:
              notify-every-unstable-build: true
              recipients: dingyang@vmware.com zhengshengz@vmware.com rahulj@vmware.com
              send-to-individuals: false
          triggers: []
          wrappers: []
